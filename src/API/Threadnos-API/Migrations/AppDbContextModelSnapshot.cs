// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Threadnos_API.Infrastructure.Persistence;

#nullable disable

namespace Threadnos_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Threadnos_API.Domain.Entities.Label", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid?>("ThreadlineId")
                        .HasColumnType("uuid")
                        .HasColumnName("threadline_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text")
                        .HasColumnName("updated_by");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_labels");

                    b.HasIndex("ThreadlineId")
                        .HasDatabaseName("ix_labels_threadline_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_labels_user_id");

                    b.ToTable("labels", (string)null);
                });

            modelBuilder.Entity("Threadnos_API.Domain.Entities.Page", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<Guid?>("ContentId")
                        .HasColumnType("uuid")
                        .HasColumnName("content_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<int>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<Guid?>("ThreadlineId")
                        .HasColumnType("uuid")
                        .HasColumnName("threadline_id");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("pk_pages");

                    b.HasIndex("ThreadlineId")
                        .HasDatabaseName("ix_pages_threadline_id");

                    b.ToTable("pages", (string)null);
                });

            modelBuilder.Entity("Threadnos_API.Domain.Entities.Threadline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text")
                        .HasColumnName("updated_by");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_threadline");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_threadline_user_id");

                    b.ToTable("threadline", (string)null);
                });

            modelBuilder.Entity("Threadnos_API.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AuthProviderUserId")
                        .HasColumnType("text")
                        .HasColumnName("auth_provider_user_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("boolean")
                        .HasColumnName("is_verified");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("timestamp")
                        .HasColumnName("last_login");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Threadnos_API.Domain.Entities.Label", b =>
                {
                    b.HasOne("Threadnos_API.Domain.Entities.Threadline", null)
                        .WithMany("Labels")
                        .HasForeignKey("ThreadlineId")
                        .HasConstraintName("fk_labels_threadline_threadline_id");

                    b.HasOne("Threadnos_API.Domain.Entities.User", null)
                        .WithMany("Labels")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_labels_users_user_id");
                });

            modelBuilder.Entity("Threadnos_API.Domain.Entities.Page", b =>
                {
                    b.HasOne("Threadnos_API.Domain.Entities.Threadline", null)
                        .WithMany("Pages")
                        .HasForeignKey("ThreadlineId")
                        .HasConstraintName("fk_pages_threadline_threadline_id");
                });

            modelBuilder.Entity("Threadnos_API.Domain.Entities.Threadline", b =>
                {
                    b.HasOne("Threadnos_API.Domain.Entities.User", null)
                        .WithMany("Threadlines")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_threadline_users_user_id");
                });

            modelBuilder.Entity("Threadnos_API.Domain.Entities.Threadline", b =>
                {
                    b.Navigation("Labels");

                    b.Navigation("Pages");
                });

            modelBuilder.Entity("Threadnos_API.Domain.Entities.User", b =>
                {
                    b.Navigation("Labels");

                    b.Navigation("Threadlines");
                });
#pragma warning restore 612, 618
        }
    }
}
